export interface ICommandOptions {
  /**
   * File with report from sonatype
   */
  sourceReport: string;

  /**
   * Output file for report in JSON
   */
  outputFile?: string;

  /**
   * Output file for report in uuString
   */
  outputFileUu?: string;

  /**
   * Dependencies of project if not provided by ossIndex scan
   */
  dependencies?: string;

  /**
   * Report is in TeamCity format
   */
  teamcity?: boolean;

  /**
   * Results will include only libraries with this regexp patterns
   */
  include: string[];

  /**
   * Results will exclude libraries with this regexp patterns
   */
  exclude: string[];
}

export interface INode {
  library: string;
  version: string;
  level: number;
  vulnerabilities: IVulnerability[];
  childNodes: INode[];
}

export interface IVulnerability {
  cve?: string;
  cwe?: string;
  title: string;
  importance: string;
  url: string;
}

export type IVulnerabilities = { [vulnerabilityUrlOrCve: string]: IVulnerableOccurrence };

export interface IVulnerableOccurrence {
  key: string;
  vulnerability: IVulnerability;
  usedBy: ILibraryPath[];
}

export type ILibraryPath = string[];

export interface IConsole {
  log(...args: string[]): void;
  error(...args: string[]): void;
}

export interface IParser {
  parse(options: ICommandOptions): INode[];
}
