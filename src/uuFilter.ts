import { INode, WhiteListTypeEnum } from "./interfaces";

export class UuFilter {
  public filter(nodes: INode[], type: WhiteListTypeEnum): INode[] {
    if (type === WhiteListTypeEnum.all) {
      return nodes;
    } else if (type === WhiteListTypeEnum.exceptUu) {
      const newNodes: INode[] = [];
      for (const node of nodes) {
        if (!this.isUuDependency(node)) {
          newNodes.push(node);
          node.childNodes = this.filter(node.childNodes, type);
        }
      }
      return newNodes;
    } else {
      const newNodes: INode[] = [];
      this.searchForUuLibraries(nodes, newNodes);
      return newNodes;
    }
  }

  private searchForUuLibraries(nodes: INode[], newNodes: INode[]) {
    for (const node of nodes) {
      if (this.isUuDependency(node)) {
        newNodes.push(node);
      } else if (node.childNodes.length) {
        this.searchForUuLibraries(node.childNodes, newNodes);
      }
    }
  }

  private isUuDependency(node: INode): boolean {
    return node.library.startsWith("uu.appg01:");
  }
}
