import { Filter } from "../src/filter";
import { INode, IVulnerability } from "../src/interfaces";

let nodes: INode[] = [];
const someVul: IVulnerability = {
  url: "",
  importance: "",
  title: "",
};
beforeEach(() => {
  nodes = [
    {
      library: "org.apache.camel:camel-core",
      childNodes: [
        {
          library: "org.apache.camel:camel-bean",
          childNodes: [],
          level: 2,
          version: "3.11.1",
          vulnerabilities: [someVul],
        },
      ],
      level: 1,
      version: "3.11.1",
      vulnerabilities: [],
    },
    {
      library: "Enelane",
      childNodes: [
        {
          library: "uu.appg01:uu_appg01_server",
          childNodes: [],
          level: 2,
          version: "5.2.1",
          vulnerabilities: [someVul],
        },
      ],
      level: 1,
      version: "5.0.4-SNPSHOT",
      vulnerabilities: [],
    },
    {
      library: "uu.appg01:uu_appg01_auditlog",
      childNodes: [],
      level: 1,
      version: "5.2.1",
      vulnerabilities: [someVul],
    },
  ];
});
describe(`UU filter`, () => {
  test(`No filter`, () => {
    const filter = new Filter();
    const result = filter.filter(nodes, [], []);
    expect(result).toHaveLength(3);
    expect(result).toStrictEqual(nodes);
    expect(result).toMatchSnapshot();
  });

  test(`No UU`, () => {
    const filter = new Filter();
    const result = filter.filter(nodes, [], [/uu.appg01:/]);
    expect(result).toHaveLength(1);
    expect(result[0].library).toBe("org.apache.camel:camel-core");
    expect(result[0].childNodes[0].library).toBe("org.apache.camel:camel-bean");
    expect(result).toMatchSnapshot();
  });

  test(`Only UU`, () => {
    const filter = new Filter();
    const result = filter.filter(nodes, [/uu.appg01:/], []);
    expect(result).toMatchSnapshot();
    expect(result).toHaveLength(2);
    expect(result[0].library).toBe("Enelane");
    expect(result[0].level).toBe(1);
    expect(result[0].childNodes[0].library).toBe("uu.appg01:uu_appg01_server");
    expect(result[0].childNodes[0].level).toBe(2);
    expect(result[1].library).toBe("uu.appg01:uu_appg01_auditlog");
    expect(result[1].level).toBe(1);
  });
});
